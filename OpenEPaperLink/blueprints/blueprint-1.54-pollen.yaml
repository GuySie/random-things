blueprint:
  name: Weatherman 1.54" - Pollen variant
  description: >
    # OpenEPaperLink Weatherman Display (1.54")

    An automation that displays current weather conditions and forecasts on 1.54" (152 x 152 pixel) E-Paper displays. Shows current weather, next hour forecast, next day forecast, and weather icons with optional moon phase display. Can switch between displaying current wind speed or current precipitation. Also able to show pollen counts (from the Kleenex pollen integration), both general and for a specific type. Adapted by [Guy Sie](https://github.com/guysie) from the Weatherman blueprint for the 1.54" display originally by [Chunkysteveo](https://github.com/chunkysteveo/OpenEPaperLink-HA-Weatherman/).

    ## Prerequisites

    - [OpenEPaperLink Integration](https://github.com/OpenEPaperLink/Home_Assistant_Integration) must be installed and configured  

    - Any weather integration (e.g., [Met.no](https://www.home-assistant.io/integrations/met)) must be set up  

    - Recommended optional integrations:
      - [Moon integration](https://www.home-assistant.io/integrations/moon) for moon phase display
      - [Sun integration](https://www.home-assistant.io/integrations/sun) for accurate day/night weather icons
      - [Kleenex pollen integration](https://github.com/MarcoGos/kleenex_pollenradar) for pollen information

    - For a nicer font add [`GothamRnd-Bold.ttf`](https://github.com/chunkysteveo/OpenEPaperLink-HA-Weatherman/raw/refs/heads/main/GothamRnd-Bold.ttf)

  domain: automation
  input:
    displays:
      name: E-Paper Display(s)
      description: What 1.54" ESLs to display the content on
      selector:
        device:
          multiple: true
          filter:
            integration: open_epaper_link
    automation_trigger:
      name: Trigger
      description: When to trigger the automation
      selector:
        trigger:
    optional:
      name: Optional
      icon: "mdi:cog"
      collapsed: true
      input:
        automation_conditions:
          name: Conditions
          description: Optional conditions that must be met to run the automation
          default: []
          selector:
            condition:
        weather_entity:
          name: Weather Entity
          description: Optional - will auto-select first working weather entity if not specified and also try to fall back to another working one if it is currently not working.
          default: ""
          selector:
            entity:
              filter:
                domain: weather
        current_temp_sensor:
          name: Current Temperature Sensor
          description: Optional temperature sensor to use instead of forecast temperature
          default: ""
          selector:
            entity:
              filter:
                domain: sensor
                device_class: temperature
        pollen_sensor:
          name: Pollen Forecast Sensor
          description: Optional Kleenex pollen sensor to use - if not specified an additional hour weather forecast will be shown
          default: ""
          selector:
            entity:
              filter:
                domain: sensor
        pollen_type:
          name: Pollen Specific Type
          description: Optional type of pollen to track (as listed in the Kleenex data) - if not specified will default to the total pollen count
          default: ""
          selector:
            text:
        show_temp_unit:
          name: Show Temperature unit
          description: Show temperature unit (°C or °F)
          default: true
          selector:
            boolean: {}
        wind_or_precipitation:
          name: Windspeed or precipitation
          description: Choose between displaying current windspeed or current precipitation
          default: "windspeed"
          selector:
            select:
              options:
                - label: "Windspeed"
                  value: "windspeed"
                - label: "Precipitation"
                  value: "precipitation"
        severe_temp_low:
          name: Low temperature treshold
          description: If this temperature or lower, indicate in accent color
          default: 3
          selector:
            number:
              unit_of_measurement: "°"
              mode: box
        severe_wind_high:
          name: High wind treshold
          description: If this windspeed or higher, indicate in accent color
          default: 75
          selector:
            number:
              unit_of_measurement: "km/h"
              mode: box
        severe_rain_high:
          name: High precipitation treshold
          description: If this precipitation or higher, indicate in accent color
          default: 8
          selector:
            number:
              unit_of_measurement: "mm"
              mode: box
        severe_pollen_high:
          name: High pollen treshold
          description: If this amount of pollen or higher, indicate in accent color
          default: 81
          selector:
            number:
              unit_of_measurement: "ppm"
              mode: box
        time_format:
          name: Time Format
          description: Choose between 12-hour (AM/PM) or 24-hour format
          default: "12h"
          selector:
            select:
              options:
                - label: "12-hour (AM/PM)"
                  value: "12h"
                - label: "24-hour"
                  value: "24h"
        start_with_today:
          name: Start Daily Forecast with Today
          description: Show today as the first day in daily forecast (default is tomorrow)
          default: false
          selector:
            boolean: {}
        weekday_format:
          name: Language
          description: Language for the interface
          default: "en"
          selector:
            select:
              options:
                - label: "English"
                  value: "en"
                - label: "German"
                  value: "de"
                - label: "Dutch"
                  value: "nl"
                - label: "French"
                  value: "fr"
                - label: "Spanish"
                  value: "es"
                - label: "Polish"
                  value: "pl"
                - label: "Croatian"
                  value: "hr"
                - label: "Swedish"
                  value: "sv"
        font_file:
          name: Font file
          description: "Path to a custom font file (default: ppb.ttf) For a better font, use `GothamRnd-Bold.ttf`"
          default: ppb.ttf
          selector:
            text: {}

variables:
  weather_entity: !input weather_entity
  current_temp_sensor: !input current_temp_sensor
  font_file: !input font_file
  time_format: !input time_format
  wind_or_precipitation: !input wind_or_precipitation
  weekday_lang: !input weekday_format
  start_with_today: !input start_with_today
  pollen_sensor: !input pollen_sensor  
  pollen_type: !input pollen_type
  forecast_entity: >-
    {% if weather_entity and states(weather_entity) not in ['unknown', 'unavailable'] %}
      {{ weather_entity }}
    {% else %}
      {{ (states | selectattr('domain','equalto','weather') | rejectattr('state','in',['unknown','unavailable']) | list | first).entity_id if states | selectattr('domain','equalto','weather') | rejectattr('state','in',['unknown','unavailable']) | list else 'unavailable' }}
    {% endif %}
  show_temp_unit: !input show_temp_unit
  language_map: >
    {% set map = {
      "en": {
        "weekdays": ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],
        "no_weather": "No working weather entity found."
      },
      "de": {
        "weekdays": ["So","Mo","Di","Mi","Do","Fr","Sa"],
        "no_weather": "Keine funktionierende Wetter-Entität gefunden."
      },
      "fr": {
        "weekdays": ["Dim","Lun","Mar","Mer","Jeu","Ven","Sam"],
        "no_weather": "Aucune entité météo fonctionnelle trouvée."
      },
      "nl": {
        "weekdays": ["Zo","Ma","Di","Wo","Do","Vr","Za"],
        "no_weather": "Geen werkende weerentiteit gevonden."
      },
      "es": {
        "weekdays": ["Dom","Lun","Mar","Mié","Jue","Vie","Sáb"],
        "no_weather": "No se encontró ninguna entidad meteorológica funcional."
      },
      "pl": {
        "weekdays": ["Nd","Pn","Wt","Śr","Cz","Pt","So"],
        "no_weather": "Nie znaleziono działającej encji pogodowej."
      },
      "hr": {
        "weekdays": ["Ned","Pon","Uto","Sri","Čet","Pet","Sub"],
        "no_weather": "Nije pronađen nijedan funkcionalan vremenski entitet."
      },
      "sv": {
        "weekdays": ["Sön","Mån","Tis","Ons","Tors","Fre","Lör"],
        "no_weather": "Ingen fungerande väderentitet hittades."
      }
    } %}
    {{ map }}

trigger: !input automation_trigger
conditions: !input automation_conditions

action:
  - choose:
      - conditions:
          - "{{ forecast_entity != 'unavailable' }}"
        sequence:
          - action: weather.get_forecasts
            target:
              entity_id: "{{ forecast_entity }}"
            data:
              type: hourly
            response_variable: weather_home_hourly
          - action: weather.get_forecasts
            target:
              entity_id: "{{ forecast_entity }}"
            data:
              type: daily
            response_variable: weather_home_daily
          - variables:
              daily_offset: "{{ 0 if start_with_today else 1 }}"
              moon_available: >
                {{ false if  states('sensor.moon_phase') == 'unknown' or states('sensor.moon_phase') == 'unavailable' else true }}
              moon_phase: >
                {% set cond_moon = states('sensor.moon_phase') %}
                {% if cond_moon == 'new_moon' %}
                moon-new
                {% elif cond_moon == 'full_moon' %}
                moon-full
                {% else %}
                {{ "moon-" + cond_moon | replace("_", "-") }}
                {%endif%}
              sun_available: >
                {{ false if  states('sun.sun') == 'unknown' or states('sun.sun') == 'unavailable' else true }}

              severe_weather:
                [
                  "fog",
                  "hail",
                  "lightning",
                  "lightning-rainy",
                  "snowy",
                  "snowy-rainy",
                  "windy",
                  "windy-variant",
                  "exceptional",
                ]
              severe_temp_low: !input severe_temp_low
              severe_wind_high: !input severe_wind_high
              severe_pollen_high: !input severe_pollen_high
              severe_rain_high: !input severe_rain_high

              day_conditions_map:
                clear-night: "mdi:weather-night"
                cloudy: "mdi:weather-cloudy"
                fog: "mdi:weather-fog"
                hail: "mdi:weather-hail"
                lightning: "mdi:weather-lightning"
                lightning-rainy: "mdi:weather-lightning-rainy"
                partlycloudy: "mdi:weather-partly-cloudy"
                pouring: "mdi:weather-pouring"
                rainy: "mdi:weather-rainy"
                snowy: "mdi:weather-snowy"
                snowy-rainy: "mdi:weather-snowy-rainy"
                sunny: "mdi:weather-sunny"
                windy: "mdi:weather-windy"
                windy-variant: "mdi:weather-windy-variant"
                exceptional: "mdi:alert-circle-outline"

              night_conditions_map:
                clear-night: "mdi:weather-night"
                cloudy: "mdi:weather-cloudy"
                fog: "mdi:weather-fog"
                hail: "mdi:weather-hail"
                lightning: "mdi:weather-lightning"
                lightning-rainy: "mdi:weather-lightning-rainy"
                partlycloudy: "mdi:weather-night-partly-cloudy"
                pouring: "mdi:weather-pouring"
                rainy: "mdi:weather-rainy"
                snowy: "mdi:weather-snowy"
                snowy-rainy: "mdi:weather-snowy-rainy"
                sunny: "mdi:weather-night"
                windy: "mdi:weather-windy"
                windy-variant: "mdi:weather-windy-variant"
                exceptional: "mdi:alert-circle-outline"

              pollen_display: >
                {% if pollen_sensor %}{% if pollen_type %}{{ state_attr(pollen_sensor, 'details') | selectattr('name', 'match', pollen_type) | map(attribute='value') | first }}{% else %}{{ (states(pollen_sensor) | float | round) }}{% endif %}{% endif %}

          - action: open_epaper_link.drawcustom
            target:
              device_id: !input displays
            data:
              background: white
              rotate: 0
              payload: >
                [
                  {% if moon_available %}
                    {
                      "type": "icon",
                      "value": "{{ moon_phase }}",
                      "x": 85,
                      "y": 1,
                      "size": 18,
                      "color": "black"
                    },
                  {% endif %}
                  # Current Weather
                  {
                    "type": "icon",
                    "value": "{% set condition = states(forecast_entity) %}{% set is_night = states('sun.sun') == 'below_horizon' %}{{ (night_conditions_map if is_night else day_conditions_map)[condition] | default('mdi:weather-' ~ condition) }}",
                    "x": 6,
                    "y": 2,
                    "size": 92,
                    "color": "{{ 'accent' if states(forecast_entity) in severe_weather else 'black' }}"
                  },
                  {
                    "type": "text",
                    "value": "{% if current_temp_sensor and current_temp_sensor != '' %}{{ states(current_temp_sensor) | float | round }}{% else %}{{ state_attr(forecast_entity,'temperature') | round }}{% endif %}{% if show_temp_unit%}{{ state_attr(forecast_entity,'temperature_unit') }}{% else %}°{% endif %}",
                    "font": "{{ font_file }}",
                    "x": 52,
                    "y": 94,
                    "size": 38,
                    "color": "{{ 'black' if state_attr(forecast_entity,'temperature') | round > severe_temp_low else 'accent' }}",
                    "anchor": "mt"
                  },
                  {
                    "type": "icon",
                    "value": "{% if wind_or_precipitation == 'windspeed' %}{{ "%s" % (["arrow-down","arrow-bottom-left","arrow-left","arrow-top-left","arrow-up","arrow-top-right","arrow-right", "arrow-bottom-right","arrow-down"][(state_attr(forecast_entity, 'wind_bearing')/45) | round]) }}{% else %}water{% endif %}",
                    "x": 6,
                    "y": 129,
                    "size": 20,
                    "color": "{% if wind_or_precipitation == 'windspeed' %}{{ 'black' if state_attr(forecast_entity,'wind_speed') | round < severe_wind_high else 'accent' }}{% else %}{{ 'black' if weather_home_hourly[forecast_entity]['forecast'][0].precipitation|round < severe_rain_high else 'accent' }}{% endif %}"
                  },
                  {
                    "type": "text",
                    "value": "{% if wind_or_precipitation == 'windspeed' %}{{ state_attr(forecast_entity, 'wind_speed')| round }}{% if show_temp_unit %}{{ state_attr(forecast_entity, 'wind_speed_unit')}}{% endif %}{% else %}{{ weather_home_hourly[forecast_entity]['forecast'][0].precipitation }}{% if show_temp_unit %}{{ state_attr(forecast_entity, 'precipitation_unit')}}{% endif %}{% endif %}",
                    "font": "{{ font_file }}",
                    "x": 26,
                    "y": 132,
                    "size": 18,
                    "color": "{% if wind_or_precipitation == 'windspeed' %}{{ 'black' if state_attr(forecast_entity,'wind_speed') | round < severe_wind_high else 'accent' }}{% else %}{{ 'black' if weather_home_hourly[forecast_entity]['forecast'][0].precipitation|round < severe_rain_high else 'accent' }}{% endif %}",
                    "anchor": "lt"
                  },
                  # Next hour or Pollen today
                  {
                    "type": "text",
                    "value": "{% if pollen_sensor %}{% if pollen_type %}{{ pollen_type }}{% else %}Pollen{% endif %}{% else %}{% if time_format == '12h' %}{{ as_timestamp(weather_home_hourly[forecast_entity]['forecast'][1].datetime) | timestamp_custom('%-I %p') }}{% else %}{{ as_timestamp(weather_home_hourly[forecast_entity]['forecast'][1].datetime) | timestamp_custom('%H:00') }}{% endif %}{% endif %}",
                    "x": 125,
                    "y": 5,
                    "size": 12,
                    "color": "black",
                    "anchor": "mt"
                  },
                  {
                    "type": "icon",
                    "value": "{% if pollen_sensor %}{{ 'flower' if pollen_display < severe_pollen_high else 'flower-pollen' }}{% else %}{% set forecast_time = as_timestamp(weather_home_hourly[forecast_entity]['forecast'][1].datetime) %}{% set condition = weather_home_hourly[forecast_entity]['forecast'][1].condition %}{%if sun_available %}{% set is_night = (states('sun.sun') == 'above_horizon' and forecast_time > as_timestamp(state_attr('sun.sun', 'next_setting'))) or (states('sun.sun') == 'below_horizon' and forecast_time < as_timestamp(state_attr('sun.sun', 'next_rising'))) %}{{ (night_conditions_map if is_night else day_conditions_map)[condition] | default('mdi:weather-' ~ condition) }}{% else %}{{ day_conditions_map[condition] | default('mdi:weather-' ~ condition)}}{% endif %}{% endif %}",
                    "x": 108,
                    "y": 16,
                    "size": 34,
                    "color": "{% if pollen_sensor %}{{ 'black' if pollen_display < severe_pollen_high else 'accent' }}{% else %}{{ 'accent' if weather_home_hourly[forecast_entity]['forecast'][1].condition in severe_weather else 'black' }}{% endif %}"
                  },
                  {
                    "type": "text",
                    "value": "{% if pollen_sensor %}{{ pollen_display }}{% if show_temp_unit %}{{ state_attr(pollen_sensor, 'unit_of_measurement') }}{% endif %}{% else %}{{ weather_home_hourly[forecast_entity]['forecast'][1].temperature|round }}{% if show_temp_unit %}{{ state_attr(forecast_entity,'temperature_unit') }}{% else %}°{% endif %}{% endif %}",
                    "font": "{{ font_file }}",
                    "x": 125,
                    "y": 50,
                    "size": 18,
                    "color": "{% if pollen_sensor %}{{ 'black' if pollen_display < severe_pollen_high else 'accent' }}{% else %}{{ 'black' if weather_home_hourly[forecast_entity]['forecast'][1].temperature|round > severe_temp_low else 'accent' }}{% endif %}",
                    "anchor": "mt"
                  },
                  {
                    "type": "line",
                    "x_start": 105,
                    "x_end": 150,
                    "y_start": 67,
                    "y_end": 67,
                    "color": "black"
                  },
                  # Next Day
                  {
                    "type": "text",
                    "value": "{{ language_map[weekday_lang]['weekdays'][as_timestamp(weather_home_daily[forecast_entity]['forecast'][daily_offset].datetime) | timestamp_custom('%w') | int ] | upper }}",
                    "x": 125,
                    "y": 70,
                    "size": 12,
                    "color": "black",
                    "anchor": "mt"
                  },
                  {
                    "type": "icon",
                    "value": "{% set condition = weather_home_daily[forecast_entity]['forecast'][daily_offset].condition %}{{ day_conditions_map[condition] | default('mdi:weather-' ~ condition) }}",
                    "x": 108,
                    "y": 81,
                    "size": 34,
                    "color": "{{ 'accent' if weather_home_daily[forecast_entity]['forecast'][daily_offset].condition in severe_weather else 'black' }}"
                  },
                  {
                    "type": "text",
                    "value": "{{ weather_home_daily[forecast_entity]['forecast'][daily_offset].temperature|round }}",
                    "font": "{{ font_file }}",
                    "x": 122,
                    "y": 114,
                    "size": 14,
                    "color": "{{ 'black' if weather_home_daily[forecast_entity]['forecast'][daily_offset].temperature|round > severe_temp_low else 'accent' }}",
                    "anchor": "rt"
                  },
                  {
                    "type": "text",
                    "value": "/",
                    "font": "{{ font_file }}",
                    "x": 125,
                    "y": 115,
                    "size": 14,
                    "color": "black",
                    "anchor": "mt"
                  },
                  {
                    "type": "text",
                    "value": "{{ weather_home_daily[forecast_entity]['forecast'][daily_offset].templow|round }}",
                    "font": "{{ font_file }}",
                    "x": 128,
                    "y": 121,
                    "size": 14,
                    "color": "{{ 'black' if weather_home_daily[forecast_entity]['forecast'][daily_offset].templow > severe_temp_low|round else 'accent' }}",
                    "anchor": "lt"
                  }
                ]
    default:
      - action: open_epaper_link.drawcustom
        target:
          device_id: !input displays
        data:
          background: white
          rotate: 0
          payload: >
            [
              {
              "type": "text",
              "value": "{{ language_map[weekday_lang]['no_weather']}}",
              "font": "{{ font_file }}",
              "x": "50%",
              "y": "50%",
              "size": 18,
              "color": "red",
              "anchor": "mm",
              "max_width": 150
              }
            ]
